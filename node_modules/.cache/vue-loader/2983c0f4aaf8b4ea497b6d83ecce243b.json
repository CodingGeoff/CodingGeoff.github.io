{"remainingRequest":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/src/components/Desktop/Desktop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/src/components/Desktop/Desktop.vue","mtime":1721659069000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/thread-loader/dist/cjs.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/babel-loader/lib/index.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/index.js","mtime":1731071015000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCb3R0b21CYXIgZnJvbSAnLi9Cb3R0b21CYXIudnVlJwppbXBvcnQgRGVza3RvcEZpbGVBcnJheSBmcm9tICcuL0Rlc2t0b3BGaWxlQXJyYXkudnVlJwppbXBvcnQgU2lkZUJhciBmcm9tICcuL1NpZGVCYXIudnVlJwppbXBvcnQgV2luZG93Rm9sZGVyIGZyb20gJy4uL1dpbmRvd0NoaWxkcmVuL1dpbmRvd0ZvbGRlci52dWUnCmltcG9ydCBXaW5kb3dNdXNpYyBmcm9tICcuLi9XaW5kb3dDaGlsZHJlbi9XaW5kb3dNdXNpYy52dWUnCmltcG9ydCBXaW5kb3dWU0NvZGUgZnJvbSAnLi4vV2luZG93Q2hpbGRyZW4vV2luZG93VlNDb2RlLnZ1ZScKaW1wb3J0IFdpbmRvd1RleHQgZnJvbSAnLi4vV2luZG93Q2hpbGRyZW4vV2luZG93VGV4dC52dWUnCmltcG9ydCBXaW5kb3dUZXJtaW5hbCBmcm9tICcuLi9XaW5kb3dDaGlsZHJlbi9XaW5kb3dUZXJtaW5hbC52dWUnCmltcG9ydCBXaW5kb3dCcm93c2VyIGZyb20gJy4uL1dpbmRvd0NoaWxkcmVuL1dpbmRvd0Jyb3dzZXIudnVlJwppbXBvcnQgV2luZG93U2V0dGluZyBmcm9tICcuLi9XaW5kb3dDaGlsZHJlbi9XaW5kb3dTZXR0aW5nLnZ1ZScKaW1wb3J0IEtleUJvYXJkIGZyb20gJy4uL0tleWJvYXJkL0tleUJvYXJkLnZ1ZScKaW1wb3J0IEtleUJvYXJkTW92ZUljb24gZnJvbSAnLi4vS2V5Ym9hcmQvS2V5Qm9hcmRNb3ZlSWNvbi52dWUnCmltcG9ydCBDb250ZXh0TWVudSBmcm9tICcuLi9Db250ZXh0TWVudS9Db250ZXh0TWVudS52dWUnCmltcG9ydCBDb250ZXh0TWVudUJvdHRvbUJhciBmcm9tICcuLi9Db250ZXh0TWVudS9Db250ZXh0TWVudUJvdHRvbUJhci52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Rlc2t0b3AnLAogIGNvbXBvbmVudHM6IHsKICAgIEJvdHRvbUJhciwKICAgIFNpZGVCYXIsCiAgICBXaW5kb3dUZXh0LAogICAgV2luZG93TXVzaWMsCiAgICBEZXNrdG9wRmlsZUFycmF5LAogICAgV2luZG93Rm9sZGVyLAogICAgV2luZG93VlNDb2RlLAogICAgV2luZG93QnJvd3NlciwKICAgIFdpbmRvd1NldHRpbmcsCiAgICBLZXlCb2FyZCwKICAgIEtleUJvYXJkTW92ZUljb24sCiAgICBXaW5kb3dUZXJtaW5hbCwKICAgIENvbnRleHRNZW51LAogICAgQ29udGV4dE1lbnVCb3R0b21CYXIKICB9LAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIG1hcDpbXSwKICAgIH0KICB9LAogIGNyZWF0ZWQoKXsKICAgIHRoaXMuJGF4aW9zLnJhdygnbWFwLmpzb24nKQogICAgLnRoZW4oKHJlcykgPT4gewogICAgICB0aGlzLm1hcF9hZGRfdXVpZChyZXMuZGF0YSkKICAgICAgdGhpcy5tYXAgPSByZXMuZGF0YQogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NvbW1pdF9maWxlbWFwJywgcmVzLmRhdGEpCiAgICAgIHRoaXMuZGVhbF93aXRoX3Bvc3RmaWxlbmFtZSgpCiAgICB9KQogICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgY29uc29sZS5sb2coImVycm9yOiIsIGVycikKICAgIH0pCiAgfSwKICBtb3VudGVkKCl7CiAgfSwKICB3YXRjaDp7CiAgICBkZXNrdG9wX2tleWJvYXJkX3Nob3codmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+ewogICAgICAgICAgdGhpcy4kcmVmcy5rZXlib2FyZF9kaXYuc3R5bGUubGVmdCA9ICgodGhpcy4kc3RvcmUuc3RhdGUuZnVsbFdpZHRoIC8yKSAtMzAwKSArICdweCc7CiAgICAgICAgICB0aGlzLiRyZWZzLmtleWJvYXJkX2Rpdi5zdHlsZS50b3AgPSAoKHRoaXMuJHN0b3JlLnN0YXRlLmZ1bGxIZWlnaHQgLSAyMDApICogMC44KSArICdweCc7CiAgICAgICAgfSkKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6ewogICAgd2luZG93X2xpc3QoKXsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLndpbmRvd19saXN0CiAgICB9LAogICAgZGVza3RvcF9rZXlib2FyZF9zaG93KCl7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5kZXNrdG9wX2tleWJvYXJkX3Nob3cKICAgIH0sCiAgICBjb250ZXh0X21lbnVfc2hvdygpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY29udGV4dF9tZW51X3Nob3cKICAgIH0sCiAgfSwKICBtZXRob2RzOnsKICAgIGJhY2tncm91bmRfY2xpY2tlZCgpewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2Nsb3NlX3NpZGVfYmFyJykKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdyZWZyZXNoX3dpbmRvd19mb2N1cycsIHt1dWlkOiIifSkKICAgIH0sCiAgICBtYXBfYWRkX3V1aWQocG9pbnRlcil7CiAgICAgIGZvciAobGV0IGl0ZW0gb2YgcG9pbnRlcikgewogICAgICAgIGl0ZW0uZmlsZXV1aWQgPSB0aGlzLiR1dGlscy5nZXRfdXVpZCgpCiAgICAgICAgaWYgKGl0ZW0uc2l6ZSA8IDApIHsKICAgICAgICAgIHRoaXMubWFwX2FkZF91dWlkKGl0ZW0uY2hpbGRyZW4pCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgdmtleV9wcmVzc2VkKGtleSwgdXBwZXJzY2FsZSl7CiAgICAgIGNvbnNvbGUubG9nKGtleSAsIHVwcGVyc2NhbGUpCiAgICB9LAogICAga2V5Ym9hcmRfbW92ZV9kb3duKCl7CiAgICAgIGxldCBvcm5fbW91c2Vkb3duID0gZG9jdW1lbnQub25tb3VzZWRvd247CiAgICAgIGxldCBlID0gZSB8fCB3aW5kb3cuZXZlbnQgfHwgZS53aGljaDsKICAgICAgbGV0IGRvd25ZID0gZS5jbGllbnRZOwogICAgICBsZXQgZG93blggPSBlLmNsaWVudFg7CiAgICAgIGxldCBvcm5fdG9wID0gdGhpcy4kcmVmcy5rZXlib2FyZF9kaXYuc3R5bGUudG9wOwogICAgICBvcm5fdG9wID0gcGFyc2VGbG9hdChvcm5fdG9wLnN1YnN0cigwLG9ybl90b3AubGVuZ3RoLTIpKQogICAgICBsZXQgb3JuX2xlZnQgPSB0aGlzLiRyZWZzLmtleWJvYXJkX2Rpdi5zdHlsZS5sZWZ0OwogICAgICBvcm5fbGVmdCA9IHBhcnNlRmxvYXQob3JuX2xlZnQuc3Vic3RyKDAsb3JuX2xlZnQubGVuZ3RoLTIpKQogICAgICBsZXQgbW91c2VNb3ZlSGFuZGxlciA9ICgpID0+IHsKICAgICAgICBsZXQgZSA9IGUgfHwgd2luZG93LmV2ZW50IHx8IGUud2hpY2g7CiAgICAgICAgbGV0IG1vdmVZID0gZS5jbGllbnRZOwogICAgICAgIGxldCBtb3ZlWCA9IGUuY2xpZW50WDsKICAgICAgICBsZXQgb2Zmc2V0WSA9IG1vdmVZLWRvd25ZCiAgICAgICAgbGV0IG9mZnNldFggPSBtb3ZlWC1kb3duWAogICAgICAgIHRoaXMuJHJlZnMua2V5Ym9hcmRfZGl2LnN0eWxlLnRvcCA9IChvcm5fdG9wICsgb2Zmc2V0WSApICsgJ3B4JzsKICAgICAgICB0aGlzLiRyZWZzLmtleWJvYXJkX2Rpdi5zdHlsZS5sZWZ0ID0gKG9ybl9sZWZ0ICsgb2Zmc2V0WCApICsgJ3B4JzsKICAgICAgfQogICAgICBsZXQgbW91c2VVcEhhbmRsZXIgPSAoKSA9PiB7CiAgICAgICAgZG9jdW1lbnQub25tb3VzZW1vdmUgPSBudWxsOwogICAgICAgIGRvY3VtZW50Lm9ubW91c2V1cCA9IG51bGw7CiAgICAgICAgZG9jdW1lbnQub25tb3VzZWRvd24gPSBvcm5fbW91c2Vkb3duOwogICAgICB9CiAgICAgIGRvY3VtZW50Lm9ubW91c2Vtb3ZlID0gbW91c2VNb3ZlSGFuZGxlcjsKICAgICAgZG9jdW1lbnQub25tb3VzZXVwID0gbW91c2VVcEhhbmRsZXI7CiAgICAgIGRvY3VtZW50Lm9ubW91c2Vkb3duID0gKCk9Pnt9OwogICAgfSwKICAgIGJnbG9hZGVkKCl7CiAgICAgIGxldCBjdGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkKICAgICAgbGV0IHRpbWVfZGlmZiA9IE1hdGgubWF4KGN0aW1lIC0gdGhpcy4kc3RvcmUuc3RhdGUuc3RhcnRfbG9hZF90aW1lLDApCiAgICAgIGlmICggaXNOYU4odGltZV9kaWZmKSB8fCB0aW1lX2RpZmYgPT09IHVuZGVmaW5lZCB8fCB0aW1lX2RpZmYgPT09IG51bGwpIHsKICAgICAgICB0aW1lX2RpZmYgPSAwCiAgICAgIH0KICAgICAgbGV0IHdhaXRfdGltZSA9IE1hdGgubWF4KDI1MDAgLSB0aW1lX2RpZmYsMCkKICAgICAgd2luZG93LnNldFRpbWVvdXQoKCk9PnsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2hpZGVfaW50ZXJsdWRlJykKICAgICAgfSwgd2FpdF90aW1lKQogICAgfSwKICAgIGJnX21yX2NsaWNrZWQoKXsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzaG93X2NvbnRleHRfbWVudScpCiAgICB9LAogICAgZGVhbF93aXRoX3Bvc3RmaWxlbmFtZSgpewogICAgICBsZXQgdGFyZ2V0ID0gdGhpcy4kcm91dGUucGFyYW1zLnBvc3RmaWxlbmFtZQogICAgICBpZiAodGFyZ2V0ID09PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gCiAgICAgIH0KICAgICAgLy8gZWxzZSAKICAgICAgbGV0IGRpZ2luID0gKGRpcikgPT4gewogICAgICAgIGZvciAobGV0IGl0ZW0gb2YgZGlyKSB7CiAgICAgICAgICBpZiAoaXRlbS5jaGlsZHJlbiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIGlmIChpdGVtLm5hbWUgPT09IHRhcmdldCkgewogICAgICAgICAgICAgIHJldHVybiBpdGVtCiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxldCByID0gZGlnaW4oaXRlbS5jaGlsZHJlbikKICAgICAgICAgICAgaWYgKHIgIT0gbnVsbCkgewogICAgICAgICAgICAgIHJldHVybiByCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIG51bGwKICAgICAgfQogICAgICBsZXQgcmVzID0gZGlnaW4odGhpcy5tYXApCiAgICAgIGlmIChyZXMgIT0gbnVsbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnb3Blbl9uZXdfd2luZG93JywgewogICAgICAgICAgdHlwZTondGV4dCcsCiAgICAgICAgICBmaWxlc3JjOiByZXMucGF0aCwKICAgICAgICAgIGZpbGVuYW1lOiByZXMubmFtZSwKICAgICAgICAgIHNpemU6IHJlcy5zaXplLAogICAgICAgIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdvcGVuX25ld193aW5kb3cnLCB7CiAgICAgICAgICB0eXBlOid0ZXh0JywKICAgICAgICAgIGZpbGVzcmM6ICcnLAogICAgICAgICAgZmlsZW5hbWU6ICc0MDQgbm90IGZvdW5kJywKICAgICAgICAgIHNpemU6IDAsCiAgICAgICAgfSkKICAgICAgfQogICAgfQogIH0sIAp9Cg=="},null]}