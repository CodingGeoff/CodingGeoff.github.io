{"remainingRequest":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/src/components/WindowChildren/WindowSetting.vue?vue&type=template&id=57dc151e&scoped=true&","dependencies":[{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/src/components/WindowChildren/WindowSetting.vue","mtime":1721659069000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1731071015000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/index.js","mtime":1731071015000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}