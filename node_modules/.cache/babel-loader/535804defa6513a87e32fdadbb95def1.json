{"remainingRequest":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/thread-loader/dist/cjs.js!/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/babel-loader/lib/index.js!/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/src/components/Desktop/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/src/components/Desktop/SideBar.vue","mtime":1721659069000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CodingGeoff.github.io/CodingGeoff.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL3J1bm5lci93b3JrL0NvZGluZ0dlb2ZmLmdpdGh1Yi5pby9Db2RpbmdHZW9mZi5naXRodWIuaW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBNZXNzYWdlIGZyb20gJy4vTWVzc2FnZS52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1JpZ2h0QmFyJywKICBjb21wb25lbnRzOiB7CiAgICBNZXNzYWdlOiBNZXNzYWdlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd19zaWRlYmFyOiB0cnVlLAogICAgICBzaG93X3NpZGViYXJfZGFlbW9uOiB0cnVlLAogICAgICBkYWVtb25fdGltZW91dDogbnVsbCwKICAgICAgbWF4X2FydGljbGVzOiA1LAogICAgICBhcnRpY2xlczoge30sCiAgICAgIGFydGljbGVzX2Rpc3BsYXk6IHt9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMucmVsb2FkX21lc3NhZ2VzKCk7CiAgICB9LCAyNDAwKTsKICB9LAogIHdhdGNoOiB7CiAgICBzaWRlYmFyX3N0YXR1czogZnVuY3Rpb24gc2lkZWJhcl9zdGF0dXModmFsKSB7CiAgICAgIHRoaXMuc2hvd19zaWRlYmFyID0gdmFsOwogICAgfSwKICAgIHNob3dfc2lkZWJhcjogZnVuY3Rpb24gc2hvd19zaWRlYmFyKHZhbCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICh2YWwpIHsKICAgICAgICBpZiAodGhpcy5kYWVtb25fdGltZW91dCAhPSBudWxsKSB7CiAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5kYWVtb25fdGltZW91dCk7CiAgICAgICAgICB0aGlzLmRhZW1vbl90aW1lb3V0ID0gbnVsbDsKICAgICAgICB9CgogICAgICAgIHRoaXMuc2hvd19zaWRlYmFyX2RhZW1vbiA9IHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kYWVtb25fdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMi5zaG93X3NpZGViYXJfZGFlbW9uID0gZmFsc2U7CiAgICAgICAgfSwgODAwKTsKICAgICAgfQogICAgfSwKICAgIGZpbGVtYXA6IGZ1bmN0aW9uIGZpbGVtYXAodmFsKSB7CiAgICAgIHZhciBhcnRpY2FsX2Z1bGxsaXN0ID0gW107CgogICAgICB2YXIgcmVjdXJzaXZlID0gZnVuY3Rpb24gcmVjdXJzaXZlKGZvbGRlciwgZm9sZGVyX25hbWUpIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZm9sZGVyKSwKICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgaXRlbSA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgICAgaWYgKGl0ZW0uY2hpbGRyZW4gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgIHZhciBuZXdfaXRlbSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoaXRlbSkpOwogICAgICAgICAgICAgIG5ld19pdGVtLmNvbnRlbnQgPSBmb2xkZXJfbmFtZTsKICAgICAgICAgICAgICBhcnRpY2FsX2Z1bGxsaXN0LnB1c2gobmV3X2l0ZW0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHJlY3Vyc2l2ZShpdGVtLmNoaWxkcmVuLCBpdGVtLm5hbWUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHJlY3Vyc2l2ZSh2YWwsICJEZXNrdG9wIik7CgogICAgICB2YXIgc29ydEZ1bmMgPSBmdW5jdGlvbiBzb3J0RnVuYyhhLCBiKSB7CiAgICAgICAgaWYgKGEubGFzdGVkaXR0aW1lID4gYi5sYXN0ZWRpdHRpbWUpIHsKICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICB9IGVsc2UgaWYgKGEubGFzdGVkaXR0aW1lID09PSBiLmxhc3RlZGl0dGltZSkgewogICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIGFydGljYWxfZnVsbGxpc3Quc29ydChzb3J0RnVuYyk7IC8vCgogICAgICB2YXIgbG9vcF9lbmQgPSBNYXRoLm1pbihhcnRpY2FsX2Z1bGxsaXN0Lmxlbmd0aCwgdGhpcy5tYXhfYXJ0aWNsZXMpOwogICAgICB2YXIgbm93X3RpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDA7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxvb3BfZW5kOyBpKyspIHsKICAgICAgICB2YXIgYXJ0aWNsZSA9IGFydGljYWxfZnVsbGxpc3RbaV07CiAgICAgICAgdmFyIHRpbWVfZGlmZiA9IG5vd190aW1lIC0gYXJ0aWNsZS5sYXN0ZWRpdHRpbWU7CiAgICAgICAgdmFyIHRpbWVfZGlmZl9zaG93ID0gIiI7CgogICAgICAgIGlmICh0aW1lX2RpZmYgPCA2MCkgewogICAgICAgICAgdGltZV9kaWZmX3Nob3cgPSBNYXRoLnJvdW5kKE1hdGgubWF4KHRpbWVfZGlmZiwgMCkpICsgIiBzZWNvbmRzIGFnbyI7CiAgICAgICAgfSBlbHNlIGlmICh0aW1lX2RpZmYgPCAzNjAwKSB7CiAgICAgICAgICB0aW1lX2RpZmZfc2hvdyA9IE1hdGgucm91bmQodGltZV9kaWZmIC8gNjApICsgIiBtaW51dGVzIGFnbyI7CiAgICAgICAgfSBlbHNlIGlmICh0aW1lX2RpZmYgPCAzNjAwICogMjQpIHsKICAgICAgICAgIHRpbWVfZGlmZl9zaG93ID0gTWF0aC5yb3VuZCh0aW1lX2RpZmYgLyAzNjAwKSArICIgaG91cnMgYWdvIjsKICAgICAgICB9IGVsc2UgaWYgKHRpbWVfZGlmZiA8IDM2MDAgKiAyNCAqIDMxKSB7CiAgICAgICAgICB0aW1lX2RpZmZfc2hvdyA9IE1hdGgucm91bmQodGltZV9kaWZmIC8gKDM2MDAgKiAyNCkpICsgIiBkYXlzIGFnbyI7CiAgICAgICAgfSBlbHNlIGlmICh0aW1lX2RpZmYgPCAzNjAwICogMjQgKiAzMSAqIDEyKSB7CiAgICAgICAgICB0aW1lX2RpZmZfc2hvdyA9IE1hdGgucm91bmQodGltZV9kaWZmIC8gKDM2MDAgKiAyNCAqIDMwLjUpKSArICIgbW9udGhzIGFnbyI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRpbWVfZGlmZl9zaG93ID0gTWF0aC5yb3VuZCh0aW1lX2RpZmYgLyAoMzYwMCAqIDI0ICogMzY1KSkgKyAiIHllYXJzIGFnbyI7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmFydGljbGVzW2ldID0gewogICAgICAgICAgdGl0bGU6IGFydGljbGUudGl0bGUsCiAgICAgICAgICBhYnN0cmFjdDogYXJ0aWNsZS5hYnN0cmFjdCwKICAgICAgICAgIGNvbnRlbnQ6IGFydGljbGUuY29udGVudCwKICAgICAgICAgIHRpbWU6IHRpbWVfZGlmZl9zaG93LAogICAgICAgICAgbGFzdGVkaXR0aW1lOiBhcnRpY2xlLmxhc3RlZGl0dGltZSwKICAgICAgICAgIGZpbGVuYW1lOiBhcnRpY2xlLm5hbWUsCiAgICAgICAgICBmaWxlc3JjOiBhcnRpY2xlLnBhdGgsCiAgICAgICAgICBmaWxlc2l6ZTogYXJ0aWNsZS5zaXplLAogICAgICAgICAgaGlkZTogZmFsc2UKICAgICAgICB9OwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc2lkZWJhcl9zdGF0dXM6IGZ1bmN0aW9uIHNpZGViYXJfc3RhdHVzKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2hvd19zaWRlYmFyOwogICAgfSwKICAgIG5vdF9zaG93X3NpZGViYXI6IGZ1bmN0aW9uIG5vdF9zaG93X3NpZGViYXIoKSB7CiAgICAgIHJldHVybiAhdGhpcy5zaG93X3NpZGViYXI7CiAgICB9LAogICAgZmlsZW1hcDogZnVuY3Rpb24gZmlsZW1hcCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmZpbGVtYXA7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZWxvYWRfbWVzc2FnZXM6IGZ1bmN0aW9uIHJlbG9hZF9tZXNzYWdlcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgcmVzZXR0aW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTsKICAgICAgdmFyIGlnbm9yZV9zaW5jZSA9IHRoaXMuJGNvb2tpZXMuZ2V0KCJpZ25vcmVfc2luY2UiKTsKCiAgICAgIGlmIChpZ25vcmVfc2luY2UgPT09IHVuZGVmaW5lZCkgewogICAgICAgIC8vIGluaXQKICAgICAgICBpZ25vcmVfc2luY2UgPSAwOwogICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJpZ25vcmVfc2luY2UiLCAiMCIsICIzMGQiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZ25vcmVfc2luY2UgPSBwYXJzZUludChpZ25vcmVfc2luY2UpOwogICAgICB9CgogICAgICBpZiAocmVzZXR0aW1lKSB7CiAgICAgICAgdGhpcy4kY29va2llcy5zZXQoImlnbm9yZV9zaW5jZSIsICIwIiwgIjMwZCIpOwogICAgICAgIGlnbm9yZV9zaW5jZSA9IDA7CiAgICAgIH0KCiAgICAgIHZhciBjb3VudCA9IDA7CiAgICAgIHZhciB0YXJnZXQgPSBuZXcgT2JqZWN0KCk7CgogICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChrZXkpIHsKICAgICAgICB2YXIgaXRlbSA9IF90aGlzMy5hcnRpY2xlc1trZXldOwoKICAgICAgICBpZiAoaXRlbS5sYXN0ZWRpdHRpbWUgPD0gaWdub3JlX3NpbmNlKSB7CiAgICAgICAgICByZXR1cm4gImNvbnRpbnVlIjsKICAgICAgICB9CgogICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHRhcmdldFtrZXldID0gaXRlbTsKICAgICAgICAgIHZhciBuZXdfdGFyID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0YXJnZXQpKTsKICAgICAgICAgIF90aGlzMy5hcnRpY2xlc19kaXNwbGF5ID0gbmV3X3RhcjsKCiAgICAgICAgICBfdGhpczMucmVmcmVzaF9jb3VudCgpOwogICAgICAgIH0sIChjb3VudCArIDEpICogNDAwKTsKICAgICAgICBjb3VudCArPSAxOwogICAgICB9OwoKICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuYXJ0aWNsZXMpIHsKICAgICAgICB2YXIgX3JldCA9IF9sb29wKGtleSk7CgogICAgICAgIGlmIChfcmV0ID09PSAiY29udGludWUiKSBjb250aW51ZTsKICAgICAgfQoKICAgICAgY291bnQ7CiAgICB9LAogICAgY2xlYW5fbWVzc2FnZXM6IGZ1bmN0aW9uIGNsZWFuX21lc3NhZ2VzKCkgewogICAgICBpZiAodGhpcy5hcnRpY2xlc19kaXNwbGF5Lmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLiRjb29raWVzLnNldCgiaWdub3JlX3NpbmNlIiwgdGhpcy5hcnRpY2xlc19kaXNwbGF5WzBdLmxhc3RlZGl0dGltZSwgIjMwZCIpOwogICAgICB9CgogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NsZWFuX2FsbF9tZXNzYWdlcycpOwoKICAgICAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLmFydGljbGVzX2Rpc3BsYXkpOyBfaSA8IF9PYmplY3Qka2V5cy5sZW5ndGg7IF9pKyspIHsKICAgICAgICB2YXIga2V5ID0gX09iamVjdCRrZXlzW19pXTsKICAgICAgICB0aGlzLmFydGljbGVzX2Rpc3BsYXlba2V5XS5oaWRlID0gdHJ1ZTsKICAgICAgfQoKICAgICAgdGhpcy5yZWZyZXNoX2NvdW50KCk7CiAgICB9LAogICAgY2xvc2VfdHJpZ2dlcmVkOiBmdW5jdGlvbiBjbG9zZV90cmlnZ2VyZWQodmFsKSB7CiAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJpZ25vcmVfc2luY2UiLCB2YWwudG9TdHJpbmcoKSwgIjMwZCIpOwogICAgfSwKICAgIGRlbGV0ZV9pdGVtOiBmdW5jdGlvbiBkZWxldGVfaXRlbShmaWxlc3JjKSB7CiAgICAgIGZvciAodmFyIF9pMiA9IDAsIF9PYmplY3Qka2V5czIgPSBPYmplY3Qua2V5cyh0aGlzLmFydGljbGVzX2Rpc3BsYXkpOyBfaTIgPCBfT2JqZWN0JGtleXMyLmxlbmd0aDsgX2kyKyspIHsKICAgICAgICB2YXIga2V5ID0gX09iamVjdCRrZXlzMltfaTJdOwogICAgICAgIHZhciBpdGVtID0gdGhpcy5hcnRpY2xlc19kaXNwbGF5W2tleV07CgogICAgICAgIGlmIChpdGVtLmZpbGVzcmMgPT09IGZpbGVzcmMpIHsKICAgICAgICAgIGl0ZW0uaGlkZSA9IHRydWU7CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLnJlZnJlc2hfY291bnQoKTsKICAgIH0sCiAgICByZWZyZXNoX2NvdW50OiBmdW5jdGlvbiByZWZyZXNoX2NvdW50KCkgewogICAgICB2YXIgY291bnQgPSAwOwoKICAgICAgZm9yICh2YXIgX2kzID0gMCwgX09iamVjdCRrZXlzMyA9IE9iamVjdC5rZXlzKHRoaXMuYXJ0aWNsZXNfZGlzcGxheSk7IF9pMyA8IF9PYmplY3Qka2V5czMubGVuZ3RoOyBfaTMrKykgewogICAgICAgIHZhciBrZXkgPSBfT2JqZWN0JGtleXMzW19pM107CiAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLmFydGljbGVzX2Rpc3BsYXlba2V5XTsKCiAgICAgICAgaWYgKGl0ZW0uaGlkZSA9PT0gZmFsc2UpIHsKICAgICAgICAgIGNvdW50ICs9IDE7CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLiRzdG9yZS5jb21taXQoImRpc3BsYXlfYXJ0aWNsZV9udW1fY2hhbmdlZCIsIGNvdW50KTsKICAgIH0KICB9Cn07"},null]}